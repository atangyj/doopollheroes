{"version":3,"sources":["assets/animals sync nonrecursive //.(png|jpe?g|svg)$","assets/animals/birdy.png","assets/animals/doge.png","assets/animals/raccoon.png","assets/masks sync nonrecursive //.(png|jpe?g|svg)$","assets/masks/batman.png","assets/masks/catwoman.png","assets/masks/thor.png","assets/skill sync nonrecursive //.(png|jpe?g|svg)$","assets/skill/batman.png","assets/skill/catwoman.png","assets/skill/thor.png","components/nameInput/nameInput.js","screens/landingView.js","components/avatars/avatar.js","components/avatars/avatars.js","screens/selectAnimalView.js","components/mask/mask.js","data/heroData.js","screens/selectRoleView.js","components/colourOptions/colourOptions.js","screens/selectColourView.js","App.js","serviceWorker.js","index.js"],"names":["map","./birdy.png","./doge.png","./raccoon.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","./batman.png","./catwoman.png","./thor.png","nameInput","_ref","heroName","handleInput","setHeroStatus","react_default","a","createElement","className","type","placeholder","value","onChange","onKeyPress","charCode","autoFocus","onClick","style","color","landingView","props","components_nameInput_nameInput","avatar","_ref$size","size","_ref$padding","padding","_ref$isShowed","isShowed","selectAnimal","imgSrc","width","height","filter","src","alt","r","ANIMALS","require","avatars","animal","i","avatars_avatar","key","selectAnimalView","components_avatars_avatars","mask","importAll","MASKS","SKILLS","COLOURS","selectRoleView","components_mask_mask","selectRole","showPower","isShowingPower","animationPlayState","skillIndex","colourOptions","colours","colour","backgroundColor","borderRadius","border","display","margin","selectColour","selectColourView","isCreated","components_colourOptions_colourOptions","createHero","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","heroStatus","name","role","heroValue","animalIndex","bind","assertThisInitialized","setState","statusType","objectSpread","target","index","newAnimalArr","Array","length","fill","splice","count","newRoleValue","_this2","_this$state","screens_landingView","screens_selectAnimalView","screens_selectRoleView","screens_selectColourView","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b041d84.chunk.js","sourcesContent":["var map = {\n\t\"./birdy.png\": 19,\n\t\"./doge.png\": 20,\n\t\"./raccoon.png\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;","module.exports = __webpack_public_path__ + \"static/media/birdy.c9c73580.png\";","module.exports = __webpack_public_path__ + \"static/media/doge.c118ceb8.png\";","module.exports = __webpack_public_path__ + \"static/media/raccoon.96bb46ec.png\";","var map = {\n\t\"./batman.png\": 23,\n\t\"./catwoman.png\": 24,\n\t\"./thor.png\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","module.exports = __webpack_public_path__ + \"static/media/batman.5209cbfb.png\";","module.exports = __webpack_public_path__ + \"static/media/catwoman.e09379ce.png\";","module.exports = __webpack_public_path__ + \"static/media/thor.e2d4e95a.png\";","var map = {\n\t\"./batman.png\": 27,\n\t\"./catwoman.png\": 28,\n\t\"./thor.png\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","module.exports = __webpack_public_path__ + \"static/media/batman.4743b6c8.png\";","module.exports = __webpack_public_path__ + \"static/media/catwoman.20f48f09.png\";","module.exports = __webpack_public_path__ + \"static/media/thor.70a77782.png\";","import React from \"react\";\n\nconst nameInput = ({ heroName, handleInput, setHeroStatus }) => {\n  return (\n    <div className=\"container-input\">\n      <input\n        type=\"text\"\n        placeholder=\"input name of your hero\"\n        value={heroName}\n        onChange={handleInput}\n        onKeyPress={e => {\n          if (e.charCode === 13) setHeroStatus(\"name\");\n        }}\n        autoFocus\n      />\n      <span\n        className=\"btn-arrow\"\n        onClick={() => setHeroStatus(\"name\")}\n        style={{ color: heroName ? \"#cddffe\" : \"#044ac3\" }}\n      >\n        &#8594;\n      </span>\n    </div>\n  );\n};\n\nexport default nameInput;\n","import React from \"react\";\nimport NameInput from \"../components/nameInput/nameInput\";\n\nconst landingView = props => (\n  <div className=\"container-outer\">\n    <div className=\"container-center sector-md\">\n      <h1>Create Your Own Hero</h1>\n      <NameInput\n        handleInput={props.handleInput}\n        setHeroStatus={props.setHeroStatus}\n        heroName={props.heroName}\n      />\n    </div>\n  </div>\n);\n\nexport default landingView;\n","import React from \"react\";\n\nconst avatar = ({\n  size = \"100%\",\n  padding = \"0\",\n  isShowed = true,\n  selectAnimal,\n  imgSrc\n}) => {\n  const style = {\n    width: size,\n    height: \"auto\",\n    padding: padding,\n    filter: isShowed ? \"brightness(100%)\" : \"brightness(0%)\"\n  };\n  return <img src={imgSrc} onClick={selectAnimal} style={style} alt=\"animal\" />;\n};\n\nexport default avatar;\n","import React from \"react\";\nimport Avatar from \"./avatar\";\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nconst ANIMALS = importAll(\n  require.context(\"../../assets/animals/\", false, /\\.(png|jpe?g|svg)$/)\n);\n\nconst avatars = ({ isShowed, selectAnimal }) => {\n  const animalList = ANIMALS.map((animal, i) => {\n    return (\n      <Avatar\n        key={i}\n        size=\"30%\"\n        padding=\"0 2rem\"\n        imgSrc={animal}\n        isShowed={isShowed[i]}\n        selectAnimal={() => selectAnimal(i)}\n      />\n    );\n  });\n  return animalList;\n};\n\nexport default avatars;\n","import React from \"react\";\nimport Avatars from \"../components/avatars/avatars\";\n\nconst selectAnimalView = props => (\n  <div className=\"container-outer\">\n    <div className=\"container-center sector-lg\">\n      <h1>Select Your Hero Animal</h1>\n      <Avatars isShowed={props.isShowed} selectAnimal={props.selectAnimal} />\n      <button onClick={() => props.setHeroStatus(\"animal\")}>Confirm</button>\n    </div>\n  </div>\n);\n\nexport default selectAnimalView;\n","import React from \"react\";\n\nconst mask = props => <img className=\"hero-mask\" src={props.mask} alt=\"mask\" />;\n\nexport default mask;\n","const importAll = r => {\n  return r.keys().map(r);\n};\n\nexport const MASKS = importAll(\n  require.context(\"../assets/masks/\", false, /\\.(png|jpe?g|svg)$/)\n);\n\nexport const ANIMALS = importAll(\n  require.context(\"../assets/animals/\", false, /\\.(png|jpe?g|svg)$/)\n);\n\nexport const SKILLS = importAll(\n  require.context(\"../assets/skill/\", false, /\\.(png|jpe?g|svg)$/)\n);\n\nexport const COLOURS = [\"#FFEBE9\", \"#021C4B\", \"#000\"];\n","import React from \"react\";\nimport Avatar from \"../components/avatars/avatar\";\nimport Mask from \"../components/mask/mask\";\nimport { SKILLS } from \"../data/heroData\";\n\nconst selectRoleView = props => (\n  <div className=\"container-outer\">\n    <div className=\"container-center\">\n      <h1>Select The Hero You Want To Play</h1>\n      <div className=\"container-mask sector-sm\">\n        <Avatar\n          isShowed={true}\n          selectAnimal={props.selectAnimal}\n          imgSrc={props.imgSrc}\n        />\n        <Mask mask={props.mask} />\n        <span className=\"btn-pre\" onClick={() => props.selectRole(-1)}>\n          &larr;\n        </span>\n        <span className=\"btn-next\" onClick={() => props.selectRole(1)}>\n          &rarr;\n        </span>\n      </div>\n      <button onClick={props.showPower}>\n        {props.isShowingPower ? \"Stop\" : \"Show Superpower\"}\n      </button>\n      <button onClick={() => props.setHeroStatus(\"role\")}>Confirm</button>\n    </div>\n    <div\n      className=\"superpower\"\n      style={{\n        animationPlayState: props.isShowingPower ? \"running\" : \"paused\"\n      }}\n    >\n      <img src={SKILLS[props.skillIndex]} alt=\"skill\" />\n      <img src={SKILLS[props.skillIndex]} alt=\"skill\" />\n      <img src={SKILLS[props.skillIndex]} alt=\"skill\" />\n    </div>\n  </div>\n);\n\nexport default selectRoleView;\n","import React from \"react\";\n\nconst colourOptions = props => {\n  const colours = props.colours.map((colour, i) => {\n    const style = {\n      backgroundColor: colour,\n      width: \"3rem\",\n      height: \"3rem\",\n      borderRadius: \"3rem\",\n      border: \"5px solid #fff\",\n      display: \"block\",\n      margin: \".8rem\"\n    };\n    return (\n      <li key={i} style={style} onClick={() => props.selectColour(colour)} />\n    );\n  });\n  return colours;\n};\n\nexport default colourOptions;\n","import React from \"react\";\nimport Avatar from \"../components/avatars/avatar\";\nimport Mask from \"../components/mask/mask\";\nimport ColourOptions from \"../components/colourOptions/colourOptions\";\n\nconst selectColourView = props => (\n  <div className=\"container-outer\">\n    <div className=\"container-center\">\n      <h1>\n        {props.isCreated ? \"A Hero Is Born!\" : \"Select Your Lucky Colour\"}\n      </h1>\n      <div className=\"container-mask sector-sm\">\n        <Avatar\n          isShowed={true}\n          selectAnimal={props.selectAnimal}\n          imgSrc={props.imgSrc}\n        />\n        <Mask mask={props.mask} />\n\n        {!props.isCreated && (\n          <div className=\"container-colour\">\n            <ColourOptions\n              colours={props.colours}\n              selectColour={props.selectColour}\n            />\n          </div>\n        )}\n      </div>\n      {props.isCreated ? (\n        <h2 className=\"label-hero-name\">{props.heroName}</h2>\n      ) : (\n        <button onClick={props.createHero}>Generate Hero</button>\n      )}\n    </div>\n  </div>\n);\n\nexport default selectColourView;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport LandingView from \"./screens/landingView\";\nimport SelectAnimalView from \"./screens/selectAnimalView\";\nimport SelectRoleView from \"./screens/selectRoleView\";\nimport SelectColourView from \"./screens/selectColourView\";\nimport { MASKS, ANIMALS, COLOURS } from \"./data/heroData\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreated: false,\n      heroStatus: {\n        name: false,\n        animal: false,\n        role: false,\n        colour: false\n      },\n      heroValue: {\n        name: \"\",\n        animal: \"\",\n        role: 0,\n        colour: \"\"\n      },\n      animalIndex: [false, false, false],\n      isShowingPower: false\n    };\n    this.setHeroStatus = this.setHeroStatus.bind(this);\n    this.selectRole = this.selectRole.bind(this);\n    this.selectColour = this.selectColour.bind(this);\n    this.selectAnimal = this.selectAnimal.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.createHero = this.createHero.bind(this);\n    this.showPower = this.showPower.bind(this);\n  }\n\n  showPower() {\n    const value = this.state.isShowingPower;\n    this.setState({ isShowingPower: !value });\n  }\n\n  setHeroStatus(statusType) {\n    let heroValue = this.state.heroValue[statusType];\n\n    if (heroValue !== \"\") {\n      let heroStatus = { ...this.state.heroStatus };\n      heroStatus[statusType] = true;\n      this.setState({ heroStatus });\n    }\n  }\n\n  handleInput(e) {\n    let heroValue = { ...this.state.heroValue };\n    heroValue.name = e.target.value;\n    this.setState({ heroValue });\n  }\n\n  selectAnimal(index) {\n    let heroValue = { ...this.state.heroValue };\n    let newAnimalArr = Array(this.state.animalIndex.length).fill(false);\n    newAnimalArr.splice(index, 1, true);\n    heroValue.animal = index;\n    this.setState({ animalIndex: newAnimalArr, heroValue });\n  }\n\n  selectRole(count) {\n    let heroValue = { ...this.state.heroValue };\n    let newRoleValue = (this.state.heroValue.role || 0) + count;\n    newRoleValue =\n      newRoleValue < 0 ? MASKS.length - 1 : newRoleValue % MASKS.length;\n    heroValue.role = newRoleValue;\n    this.setState({ heroValue });\n  }\n\n  selectColour(colour) {\n    let heroValue = { ...this.state.heroValue };\n    heroValue.colour = colour;\n    this.setState({ heroValue }, () => this.setHeroStatus(\"colour\"));\n  }\n\n  createHero() {\n    this.setState({ isCreated: true });\n  }\n\n  render() {\n    const { heroStatus, heroValue } = this.state;\n\n    return (\n      <div style={{ backgroundColor: heroValue.colour }}>\n        {!heroStatus.name && (\n          <LandingView\n            heroName={heroValue.name}\n            handleInput={this.handleInput}\n            setHeroStatus={this.setHeroStatus}\n          />\n        )}\n        {heroStatus.name && !heroStatus.animal && (\n          <SelectAnimalView\n            isShowed={this.state.animalIndex}\n            selectAnimal={this.selectAnimal}\n            setHeroStatus={this.setHeroStatus}\n          />\n        )}\n        {heroStatus.animal && !heroStatus.role && (\n          <SelectRoleView\n            imgSrc={ANIMALS[heroValue.animal]}\n            mask={MASKS[heroValue.role]}\n            skillIndex={heroValue.role}\n            selectRole={this.selectRole}\n            setHeroStatus={this.setHeroStatus}\n            showPower={this.showPower}\n            isShowingPower={this.state.isShowingPower}\n          />\n        )}\n        {heroStatus.role && (\n          <SelectColourView\n            colours={COLOURS}\n            heroName={heroValue.name}\n            imgSrc={ANIMALS[heroValue.animal]}\n            mask={MASKS[heroValue.role]}\n            selectRole={this.selectRole}\n            selectColour={this.selectColour}\n            setHeroStatus={this.setHeroStatus}\n            isCreated={this.state.isCreated}\n            createHero={this.createHero}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}